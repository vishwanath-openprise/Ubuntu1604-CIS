---
- name: "NOTSCORED | 6.1.1 | PATCH | Audit system file permissions"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_1_1
  tags:
      - level2
      - notscored
      - patch
      - rule_6.1.1
      - notimplemented

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      dest: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - ubuntu1604cis_rule_6_1_2
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.2

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      dest: /etc/shadow
      owner: root
      group: root
      mode: 0640
  when:
      - ubuntu1604cis_rule_6_1_3
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.3
      - edited_by_kchaitanya863

- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      dest: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - ubuntu1604cis_rule_6_1_4
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.4

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      path: /etc/gshadow
      owner: shadow
      group: root
      mode: o-rwx,g-rw
  when:
      - ubuntu1604cis_rule_6_1_5
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.5
      - edited_by_kchaitanya863

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      dest: /etc/passwd-
      owner: root
      group: root
      mode: 0600
  when:
      - ubuntu1604cis_rule_6_1_6
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.6

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      dest: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - ubuntu1604cis_rule_6_1_7
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.7

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      dest: /etc/group-
      owner: root
      group: root
      mode: 0600
  when:
      - ubuntu1604cis_rule_6_1_8
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.8

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      dest: /etc/gshadow-
      owner: root
      group: root
      mode: 0600
  when:
      - ubuntu1604cis_rule_6_1_9
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.9

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  # command: /bin/true
  block:
    - name: 6.1.10 - Audit if any world writable files exist
      shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
      register: audit_6_1_10
      changed_when: false
    
    - name: 6.1.10 - Remove others write permissions on world open files
      shell: "chmod o-w {{item}}"
      with_items: "{{audit_6_1_10.stdout_lines}}"
      when:
        - audit_6_1_10.stdout_lines is defined and audit_6_1_10.stdout_lines|length > 0
      changed_when: False

      #updating the file count
    - name: 6.1.10 - Audit if any world writable files exist
      shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
      register: audit_6_1_10
      changed_when: false
      when:
        - audit_6_1_10.stdout_lines is defined and audit_6_1_10.stdout_lines|length > 0

    - name: 6.1.10 - Ensure no world writable files exist
      fail:
        msg: "{{ audit_6_1_10.stdout_lines }}"
      when:
        - audit_6_1_10.stdout_lines is defined and audit_6_1_10.stdout_lines|length > 0
        - fail_on_manual_remediation_actions
      changed_when: false
    
    - name: 6.1.10 - Ensure no world writable files exist
      debug:
        msg: "*** ACTION REQUIRED *** {{ audit_6_1_10.stdout }}"
      when:
        - audit_6_1_10.stdout_lines is defined and audit_6_1_10.stdout_lines|length > 0
        - not fail_on_manual_remediation_actions
      changed_when: false
  
  when:
      - ubuntu1604cis_rule_6_1_10
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.10
      - edited_by_kchaitanya863

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  # command: /bin/true
  block:
    - name: 6.1.11 - Audit if any unowned files or directories exist
      shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser
      register: audit_6_1_11
      changed_when: false
    
    - name: 6.1.11 - Ensure no unowned files or directories exist
      fail:
        msg: "{{ audit_6_1_11.stdout_lines }}"
      when:
        - audit_6_1_11.stdout_lines is defined and audit_6_1_11.stdout_lines|length > 0
        - fail_on_manual_remediation_actions
      changed_when: false
    
    - name: 6.1.11 - Ensure no unowned files or directories exist
      debug:
        msg: "*** ACTION REQUIRED *** {{ audit_6_1_11.stdout }}"
      when:
        - audit_6_1_11.stdout_lines is defined and audit_6_1_11.stdout_lines|length > 0
        - not fail_on_manual_remediation_actions
      changed_when: false
  
  when:
      - ubuntu1604cis_rule_6_1_11
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.11
      - edited_by_kchaitanya863

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  # command: /bin/true
  block:
    - name: 6.1.12 - Audit if any ungrouped files or directories exist
      shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup
      changed_when: false
      register: audit_6_1_12
    
    - name: 6.1.12 - Ensure no ungrouped files or directories exist
      fail:
        msg: "{{ audit_6_1_12.stdout_lines }}"
      when:
        - audit_6_1_12.stdout_lines is defined and audit_6_1_12.stdout_lines|length > 0
        - fail_on_manual_remediation_actions
      changed_when: false
    
    - name: 6.1.12 - Ensure no ungrouped files or directories exist
      debug:
        msg: "*** ACTION REQUIRED *** {{ audit_6_1_12.stdout }}"
      when:
        - audit_6_1_12.stdout_lines is defined and audit_6_1_12.stdout_lines|length > 0
        - not fail_on_manual_remediation_actions
      changed_when: false
  when:
      - ubuntu1604cis_rule_6_1_12
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.12
      - edited_by_kchaitanya863

- name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_1_13
  tags:
      - level1
      - notscored
      - patch
      - rule_6.1.13
      - notimplemented

- name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_1_14
  tags:
      - level1
      - notscored
      - patch
      - rule_6.1.14
      - notimplemented

- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  with_items: "{{ empty_password_accounts.stdout_lines }}"
  when:
      - empty_password_accounts.rc
      - ubuntu1604cis_rule_6_2_1
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.1

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy '+' entries exist in /etc/passwd"
  command: sed -i '/^+/ d' /etc/passwd
  changed_when: false
  failed_when: false
  when:
      - ubuntu1604cis_rule_6_2_2
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.2

- name: "SCORED | 6.2.3 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  command: sed -i '/^+/ d' /etc/shadow
  changed_when: false
  failed_when: false
  when:
      - ubuntu1604cis_rule_6_2_3
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.3

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  command: sed -i '/^+/ d' /etc/group
  changed_when: false
  failed_when: false
  when:
      - ubuntu1604cis_rule_6_2_4
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.4

- name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  with_items: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
      - uid_zero_accounts_except_root.rc
      - ubuntu1604cis_rule_6_2_5
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.5

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_2_6
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.6
      - notimplemented

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  shell: |
    sudopath=($(grep secure_path /etc/sudoers | cut -f2 -d= |cut -f2 -d\"))
    IFS=:
    for i in ${sudopath[*]}
    do
      if [ -d "$i" ]
        then newsudopath+=($i)
      fi
     done
    echo "${newsudopath[*]}"
  args:
      executable: /bin/bash
  register: fixsudo
  changed_when: false
  check_mode: false
  when:
      - ubuntu1604cis_rule_6_2_6
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.6

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  lineinfile:
      dest: /etc/sudoers
      regexp: "(.*secure_path=).*"
      line: '\1"{{ fixsudo.stdout_lines[0] }}"'
      backrefs: true
  when:
      - fixsudo.stdout_lines[0] != ""
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.6

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  block:
    - name: 6.2.7 Ensure all users' home directories exist (Scored)
      shell: |
        #!/bin/bash
        cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do
        if [ $uid -ge 1000 -a ! -d "$dir" -a $user != "nfsnobody" ]; then
        echo "The home directory ($dir) of user $user does not exist."
        fi
        done
      args:
        executable: /bin/bash
      register: home_directories_exist
      
    - name: 6.2.7 Ensure all users' home directories exist (Scored)
      debug:
        var: home_directories_exist.stdout_lines

  when:
      - ubuntu1604cis_rule_6_2_7
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.7
      - edited_by_kchaitanya863

# - name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
#   # command: /bin/true
#   block:
#     - name: 6.2.8 - Audit users' home directories permissions
#       script: "{{ role_path }}/files/audit_6.2.8.sh"
#       check_mode: no
#       changed_when: False
#       register: audit_6_2_8
#       # changed_when: false
    
#     - name: 6.2.8 - FIX Ensure users' home directories permissions are 750 or more restrictive
#       shell: "cat /etc/passwd | egrep -v '(root|halt|sync|shutdown)' | awk -F: '($7 != \"/sbin/nologin\") { print $6 }' | xargs chmod 750"
#       changed_when: false
#       when:
#         - audit_6_2_8.stdout_lines is defined and audit_6_2_8.stdout_lines|length > 0
#         - fail_on_manual_remediation_actions

#     - name: 6.2.8 - Re-Audit users' home directories permissions
#       script: "{{ role_path }}/files/audit_6.2.8.sh"
#       check_mode: no
#       changed_when: False
#       register: audit_6_2_8
#       when:
#         - audit_6_2_8.stdout_lines is defined and audit_6_2_8.stdout_lines|length > 0
#         - fail_on_manual_remediation_actions

#     - name: 6.2.8 - Ensure users' home directories permissions are 750 or more restrictive
#       fail:
#         msg: "{{ audit_6_2_8.stdout_lines }}"
#       changed_when: false
#       when:
#         - audit_6_2_8.stdout_lines is defined and audit_6_2_8.stdout_lines|length > 0
#         - fail_on_manual_remediation_actions
    
#     - name: 6.2.8 - Ensure users' home directories permissions are 750 or more restrictive
#       debug:
#         msg: "*** ACTION REQUIRED *** {{ audit_6_2_8.stdout }}"
#       changed_when: false
#       when:
#         - audit_6_2_8.stdout_lines is defined and audit_6_2_8.stdout_lines|length > 0
#         - not fail_on_manual_remediation_actions

  
#   when:
#       - ubuntu1604cis_rule_6_2_8
#   tags:
#       - level1
#       - scored
#       - patch
#       - rule_6.2.8
#       - edited_by_kchaitanya863

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  # command: /bin/true
  shell: |
      #!/bin/bash
      cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do
      if [ $uid -ge 1000 -a -d "$dir" -a $user != "nfsnobody" ]; then
      owner=$(stat -L -c "%U" "$dir")
      if [ "$owner" != "$user" ]; then
      echo "The home directory ($dir) of user $user is owned by $owner."
      fi
      fi
      done
  when:
      - ubuntu1604cis_rule_6_2_9
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.9
      - edited_by_kchaitanya863

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  shell: |
      #!/bin/bash
      for dir in `cat /etc/passwd | egrep -v '(root|sync|halt|shutdown)' | awk -F: '($7 != "/usr/sbin/nologin") { print $6 }'`; do
        for file in $dir/.[A-Za-z0-9]*; do
          if [ ! -h "$file" -a -f "$file" ]; then
            fileperm=`ls -ld $file | cut -f1 -d" "`
            if [ `echo $fileperm | cut -c6 ` != "-" ]; then
              echo "Group Write permission set on file $file"
            fi
            if [ `echo $fileperm | cut -c9 ` != "-" ]; then
              echo "Other Write permission set on file $file"
            fi
          fi
        done
      done
  when:
      - ubuntu1604cis_rule_6_2_10
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.10
      - edited_by_kchaitanya863

- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  file:
      state: absent
      dest: "~{{ item }}/.forward"
  with_items: "{{ users.stdout_lines }}"
  when:
      - ubuntu1604cis_rule_6_2_11
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.11

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files"
  file:
      state: absent
      dest: "~{{ item }}/.netrc"
  with_items: "{{ users.stdout_lines }}"
  when:
      - ubuntu1604cis_rule_6_2_12
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.12

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  file:
      state: absent
      dest: "~{{ item }}/.rhosts"
  with_items: "{{ users.stdout_lines }}"
  when:
      - ubuntu1604cis_rule_6_2_14
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.14

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_2_15
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.15
      - notimplemented

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_2_16
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.16
      - notimplemented

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  # command: /bin/true
  shell: |
        #!/bin/bash
        cat /etc/group | cut -f3 -d":" | sort -n | uniq -c | while read x ; do
          [ -z "${x}" ] && break
          set - $x
          if [ $1 -gt 1 ]; then
            groups=`awk -F: '($3 == n) { print $1 }' n=$2 /etc/group | xargs`
            echo "${groups}\n"
          fi
        done
  register: audit_6_2_17
  changed_when: audit_6_2_17.stdout != ""
  when:
      - ubuntu1604cis_rule_6_2_17
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.17
      - edited_by_kchaitanya863

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_2_18
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.18
      - notimplemented

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu1604cis_rule_6_2_19
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.19
      - notimplemented
